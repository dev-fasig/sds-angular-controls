/*! 
 * sds-angular-controls
 * Angular Directives used with sds-angular generator
 * @version 0.5.2 
 * 
 * Copyright (c) 2017 Steve Gentile, David Benson 
 * @link https://github.com/SMARTDATASYSTEMSLLC/sds-angular-controls 
 * @license  MIT 
 */

angular.module("sds-angular-controls",["ui.bootstrap","toggle-switch","ngSanitize","selectize-ng","currencyMask"]),function(){"use strict";function a(){return function(a,b){var c={};return angular.forEach(a,function(a,d){d!==b&&(c[d]=a)}),c}}angular.module("sds-angular-controls").filter("keyFilter",a)}(),function(){"use strict";function a(){var a=["th","st","nd","rd"];return function(b){var c=b%100;return b+(a[(c-20)%10]||a[c]||a[0])}}angular.module("sds-angular-controls").filter("ordinal",a)}(),function(){"use strict";function a(a){return function(b){return(null===b||void 0===b||""===b)&&(b=" "),a(b)}}a.$inject=["$sanitize"],angular.module("sds-angular-controls").filter("sanitize",a)}(),function(){"use strict";function a(a){return a.trustAsHtml}a.$inject=["$sce"],angular.module("sds-angular-controls").filter("unsafe",a)}(),angular.module("currencyMask",[]).directive("currencyMask",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){var e=function(a,b){void 0==b&&(b=!1),a=a.toString();var c="-"===a[0];a=a.replace(/[^0-9\.]/g,"");var d=a.split(".");return d[0]=d[0].replace(/\d{1,3}(?=(\d{3})+(?!\d))/g,"$&,"),d[1]&&d[1].length>2&&(d[1]=d[1].substring(0,2)),b&&d[1]&&1===d[1].length?d[1]=d[1]+"0":b&&!d[1]&&(d[1]="00"),(c?"-":"")+"$"+d[0]+"."+d[1]},f=function(){var a=b.val(),c=a;a&&0!=a.length&&(a=e(a,!0),a!=c&&(b.val(a),b.triggerHandler("input")))};b.bind("keypress",function(a){var b=8==a.which||void 0==a.which||0==a.which?null:String.fromCharCode(a.which).match(/[^$,-.0-9]/);b&&a.preventDefault()}).bind("blur",f),d.$parsers.push(function(a){return a&&0!=a.length?(a=a.toString(),a=a.replace(/[^0-9\.\-]/g,"")):a}),d.$formatters.push(function(a){return a&&0!=a.length?a=e(a,!0):a})}}}),function(){"use strict";function a(a){return{restrict:"EA",require:"^formField",replace:!0,scope:{items:"=",groups:"=?",itemKey:"@?",itemValue:"@?",itemSort:"@?",itemGroupKey:"@?",itemGroupValue:"@?",dropdownDirection:"@?",allowCustom:"=?",style:"@?",layoutCss:"@?"},templateUrl:"sds-angular-controls/form-directives/form-autocomplete.html",link:function(b,c,d,e){function f(){var c=0,d=_.reduce(b.items,function(a,b,d){return a.push({itemKey:d,itemValue:b,__sort:c++}),a},[]);return b.options.valueField="itemKey",b.options.labelField="itemValue",b.options.searchField=["itemValue"],b.reload=!0,a(function(){b.reload=!1}),d}c.find("select");switch(b.container=e.$scope,b.innerItems=[],b.$watch("items",function(c,d){if(b.items&&!_.isArray(b.items))b.innerItems=f();else{var e=0;b.innerItems=_.map(b.items,function(a){return a.__sort=e++,a})}c&&c!==d&&(b.reload=!0,a(function(){b.reload=!1}))}),e.$scope.layout){case"horizontal":b.layoutCss=b.layoutCss||"col-md-6";break;default:b.layoutCss=b.layoutCss||""}e.$scope.isAutofocus&&a(function(){c.find("select").focus()}),b.$watch("container.isReadonly",function(a){if(a&&b.container.record&&b.container.record[b.container.field]){var c=b.innerItems[b.container.record[b.container.field]];if(b.itemValue&&b.itemKey){var d=_.find(b.innerItems,function(a){return a[b.itemKey]===b.container.record[b.container.field]});c=d[b.itemValue]}b.readOnlyModel=c}});var g={plugins:["dropdown_direction"],dropdownDirection:b.dropdownDirection||"auto",valueField:b.itemKey,labelField:b.itemValue,searchField:[b.itemValue],sortField:b.itemSort||"__sort",maxOptions:1200};b.allowCustom&&(g.persist=!1,g.create=!0),b.itemGroupKey&&_.isArray(b.groups)&&(g.optgroups=b.groups,g.optgroupField=b.itemGroupKey,g.optgroupValueField=b.itemGroupKey,g.optgroupLabelField=b.itemGroupValue,b.$watch("groups",function(c,d){c!==d&&(b.options.optgroups=b.groups,b.reload=!0,a(function(){b.reload=!1}))})),b.options=g}}}a.$inject=["$timeout"],angular.module("sds-angular-controls").directive("formAutocomplete",a)}(),function(){"use strict";function a(a){return{restrict:"E",transclude:!0,replace:!0,scope:{buttonClass:"@?",action:"&"},template:'<a href="" class="btn {{buttonClass}} {{isDisabled}}" ng-click="doPromise($event)" ng-transclude></a>',link:function(b,c,d){b.buttonClass=b.buttonClass||"btn-default",b.isDisabled="",b.doPromise=function(c){b.isDisabled||(b.isDisabled="disabled",a.when(b.action(c)).then(function(){b.isDisabled=""},function(){b.isDisabled=""}))}}}}a.$inject=["$q"],angular.module("sds-angular-controls").directive("formButton",a)}(),function(){"use strict";function a(a){return{restrict:"A",require:"^form-field, ngModel",compile:function(a,b){return a.attr("ng-model","container.record[container.field]"),a.attr("ng-required","container.isRequired"),a.attr("ng-disabled","container.isReadonly"),a.attr("name","{{::container.field}}"),function(a,b,c,d){var e=(b.find("input"),d[1],d[0]);a.container=e.$scope,c.min&&(e.$scope.min=c.min),c.max&&(e.$scope.max=c.max);var f=c.name||c.ngModel.substr(c.ngModel.lastIndexOf(".")+1);e.$scope.field=f}}}}a.$inject=["$timeout"],angular.module("sds-angular-controls").directive("formControl",a)}(),function(){"use strict";function a(a){return{restrict:"EA",require:"^form-field",replace:!0,scope:{placeholder:"@?",rightLabel:"@?",mask:"@?",max:"@?",min:"@?",style:"@?",layoutCss:"@?"},templateUrl:"sds-angular-controls/form-directives/form-currency-input.html",link:function(b,c,d,e){c.find("input");switch(b.container=e.$scope,e.$scope.layout){case"horizontal":b.layoutCss=b.layoutCss||"col-md-6";break;default:b.layoutCss=b.layoutCss||""}b.min&&(e.$scope.min=b.min),b.max&&(e.$scope.max=b.max),e.$scope.isAutofocus&&a(function(){c.find("input").focus()})}}}a.$inject=["$timeout"],angular.module("sds-angular-controls").directive("formCurrencyInput",a)}(),function(){"use strict";function a(a,b){return{restrict:"EA",require:"^form-field",replace:!0,scope:{dateFormat:"@",modelOptions:"=?",max:"=?",min:"=?",style:"@?",layoutCss:"@?"},templateUrl:"sds-angular-controls/form-directives/form-date-picker.html",link:function(b,c,d,e){c.find("input");switch(b.container=e.$scope,e.$scope.layout){case"horizontal":b.layoutCss=b.layoutCss||"col-md-6";break;default:b.layoutCss=b.layoutCss||""}e.$scope.isAutofocus&&a(function(){c.find("input").focus()}),b.dateFormat=b.dateFormat||"MM-dd-yyyy",b.calendar={opened:!1},b.open=function(a){a.preventDefault(),a.stopPropagation(),b.calendar.opened=!0},b.$watch("container.record[container.field]",function(a){"string"==typeof a&&(e.$scope.record[e.$scope.field]=moment.utc(e.$scope.record[e.$scope.field]).toDate())}),b.$watch("container.isReadonly",function(a){a&&b.container.record[b.container.field]&&(b.readOnlyModel=moment(b.container.record[b.container.field]).format(b.dateFormat.toUpperCase()))}),b.max&&(e.$scope.max=moment.utc(b.max).format(b.dateFormat.toUpperCase())),b.min&&(e.$scope.min=moment.utc(b.min).format(b.dateFormat.toUpperCase()))}}}function b(){return{restrict:"EAC",require:"ngModel",link:function(a,b,c,d){d.$formatters.shift()}}}a.$inject=["$timeout","$log"],angular.module("sds-angular-controls").directive("formDatePicker",a).directive("datepickerPopup",b)}(),function(){"use strict";function a(a){return{restrict:"EA",require:"^form-field",replace:!0,scope:{dateFormat:"@",modelOptions:"=?",max:"=?",min:"=?",style:"@?",layoutCss:"@?"},templateUrl:"sds-angular-controls/form-directives/form-date-time-picker.html",link:function(b,c,d,e){c.find("input");switch(b.container=e.$scope,e.$scope.layout){case"horizontal":b.layoutCss=b.layoutCss||"col-md-6";break;default:b.layoutCss=b.layoutCss||""}e.$scope.isAutofocus&&a(function(){c.find("input").focus()}),b.dateFormat=b.dateFormat||"MM-dd-yyyy",b.calendar={opened:!1},b.open=function(a){a.preventDefault(),a.stopPropagation(),b.calendar.opened=!0},b.$watch("container.record[container.field]",function(a){"string"==typeof a&&(e.$scope.record[e.$scope.field]=moment.utc(e.$scope.record[e.$scope.field]).toDate())}),b.$watch("container.isReadonly",function(a){if(a){var c=moment(b.container.record[b.container.field]);b.readOnlyModel=c.format(b.dateFormat.toUpperCase())+c.format(" h:mm a")}}),b.max&&(e.$scope.max=moment(b.max).format(b.dateFormat)),b.min&&(e.$scope.min=moment(b.min).format(b.dateFormat))}}}a.$inject=["$timeout"],angular.module("sds-angular-controls").directive("formDateTimePicker",a)}(),function(){"use strict";function a(a,b){return{restrict:"EA",transclude:!0,replace:!0,scope:{record:"=",isRequired:"=?",isReadonly:"=?",isAutofocus:"=?",field:"@",label:"@",layout:"@?",labelCss:"@?",layoutCss:"@?",showLabel:"=?",errorLayoutCss:"@?",hideValidationMessage:"=?",log:"@?",validationFieldName:"@?"},templateUrl:"sds-angular-controls/form-directives/form-field.html",require:"^form",controller:["$scope",function(a){this.$scope=a}],link:function(a,c,d,e){a.showDefault=!1,b(function(){0===c.find("ng-transclude *").length&&(a.showDefault=!0)});var f=function(a){return(null===a||void 0===a||""===a)&&(a=" "),a=(a+"").replace(/([A-Z])/g," $1"),a[0].toUpperCase()+a.slice(1)};a.label||(a.label=f(a.field)),a.validationFieldName=a.validationFieldName||f(a.label),a.showLabel=a.showLabel!==!1,a.hideValidationMessage=a.hideValidationMessage||!1,a.layoutCss=a.layoutCss||"col-md-12",a.errorLayoutCss=a.errorLayoutCss||"col-md-12",a.layout=a.layout||"stacked","horizontal"===a.layout&&(a.labelCss=a.labelCss||"col-md-4"),a.showError=function(a){try{return e.$submitted?a.$invalid:c.find("[name="+a.$name+"]:focus").length?!1:a.$dirty&&a.$invalid}catch(b){return!1}}}}}a.$inject=["$filter","$timeout"],angular.module("sds-angular-controls").directive("formField",a)}(),function(){"use strict";function a(a){return{restrict:"E",require:"^form-field",replace:!0,scope:{placeholder:"@?",rightLabel:"@?",mask:"@?",max:"@?",min:"@?",maxlength:"@?",minlength:"@?",style:"@?",layoutCss:"@?"},templateUrl:"sds-angular-controls/form-directives/form-input.html",link:function(b,c,d,e){var f=c.find("input");switch(b.container=e.$scope,e.$scope.layout){case"horizontal":b.layoutCss=b.layoutCss||"col-md-6";break;default:b.layoutCss=b.layoutCss||""}e.$scope.isAutofocus&&a(function(){c.find("input").focus()}),b.min&&(e.$scope.min=b.min),b.max&&(e.$scope.max=b.max),d.pattern&&f.attr("pattern",d.pattern),b.step=d.step||"any",b.type=d.type||"text",a(function(){var a=b.step.match(/^\d+$/);"number"===b.type&&c.find(".inputField").on("keydown",function(b){var c=b.which||b.keyCode;return b.metaKey||b.ctrlKey||!b.shiftKey&&c>=48&&57>=c||c>=96&&105>=c||109==c||189==c||!a&&190==c||110==c||8==c||9==c||13==c||35==c||36==c||37==c||39==c||46==c||45==c})})}}}a.$inject=["$timeout"],angular.module("sds-angular-controls").directive("formInput",a)}(),function(){"use strict";function a(a){return{restrict:"EA",require:"^formField",replace:!0,scope:{items:"=",groups:"=?",itemKey:"@?",itemValue:"@?",itemGroupKey:"@?",itemGroupValue:"@?",sortField:"@?",allowCustom:"=?",style:"@?",layoutCss:"@?"},templateUrl:"sds-angular-controls/form-directives/form-multi-select.html",link:function(b,c,d,e){c.find("select");switch(b.container=e.$scope,e.$scope.layout){case"horizontal":b.layoutCss=b.layoutCss||"col-md-6";break;default:b.layoutCss=b.layoutCss||""}e.$scope.isAutofocus&&a(function(){c.find("select").focus()}),b.$watch("container.isReadonly",function(a){if(a&&b.container.record&&b.container.record[b.container.field]){var c=b.items[b.container.record[b.container.field]];if(b.itemValue&&b.itemKey){var d=_.find(b.items,function(a){return a[b.itemKey]===b.container.record[b.container.field]});c=d[b.itemValue]}b.readOnlyModel=c}});var f={plugins:["remove_button"],valueField:b.itemKey,labelField:b.itemValue,searchField:[b.itemValue],maxOptions:10};b.sortField&&(f.sortField=b.sortField),b.allowCustom&&(f.persist=!1,f.create=!0),b.itemGroupKey&&_.isArray(b.groups)&&(f.optgroups=b.groups,f.optgroupField=b.itemGroupKey,f.optgroupValueField=b.itemGroupKey,f.optgroupLabelField=b.itemGroupValue),b.options=f}}}a.$inject=["$timeout"],angular.module("sds-angular-controls").directive("formMultiSelect",a)}(),function(){"use strict";function a(a){return{restrict:"EA",require:"^formField",replace:!0,scope:{items:"=",itemKey:"@?",itemValue:"@?",style:"@?",layoutCss:"@?"},templateUrl:"sds-angular-controls/form-directives/form-select.html",link:function(b,c,d,e){function f(a,b){for(var c=b.split(".");c.length&&(a=a[c.shift()]););return a}function g(a,b,c){var d=function(){};return d.prototype.orderedKeys=[],_.reduce(a,function(a,d){var e=f(d,b),g=f(d,c);return a[e]=g,a.orderedKeys.push(e),a},new d)}c.find("select");switch(b.container=e.$scope,b.innerItems={},b.$watch("items",function(a,c){b.items&&_.isArray(b.items)?b.itemKey&&b.itemValue&&(b.innerItems=g(b.items,b.itemKey,b.itemValue)):b.innerItems=b.items}),e.$scope.layout){case"horizontal":b.layoutCss=b.layoutCss||"col-md-6";break;default:b.layoutCss=b.layoutCss||""}e.$scope.isAutofocus&&a(function(){c.find("select").focus()}),b.$watch("container.isReadonly",function(a){if(a&&b.container.record&&b.container.record[b.container.field]){var c=b.innerItems[b.container.record[b.container.field]];b.readOnlyModel=c}}),b.orderHash=function(a){return a?a.orderedKeys||Object.keys(a):[]},b.convertType=function(a){return b.record&&b.record[b.field]&&"string"==typeof b.record[b.field]?a.toString():a&&!isNaN(a)?parseInt(a,10):a}}}}a.$inject=["$timeout"],angular.module("sds-angular-controls").directive("formSelect",a)}(),function(){"use strict";function a(a){return{restrict:"EA",replace:!0,require:"^formField",scope:{style:"@?",layoutCss:"@?",maxlength:"@?",minlength:"@?"},templateUrl:"sds-angular-controls/form-directives/form-text-area.html",link:function(b,c,d,e){c.find("textarea");switch(b.container=e.$scope,e.$scope.layout){case"horizontal":b.layoutCss=b.layoutCss||"col-md-6";break;default:b.layoutCss=b.layoutCss||""}e.$scope.isAutofocus&&a(function(){c.find("textarea").focus()})}}}a.$inject=["$timeout"],angular.module("sds-angular-controls").directive("formTextArea",a)}(),function(){"use strict";function a(a){return{restrict:"EA",replace:!0,require:"^form-field",scope:{placeholder:"@?",toggleField:"@?",toggleSwitchType:"@?",onLabel:"@?",offLabel:"@?",style:"@?",layoutCss:"@?"},templateUrl:"sds-angular-controls/form-directives/form-text-toggle.html",link:function(b,c,d,e){c.find("input");switch(b.container=e.$scope,e.$scope.layout){case"horizontal":b.layoutCss=b.layoutCss||"col-md-6";break;default:b.layoutCss=b.layoutCss||""}e.$scope.isAutofocus&&a(function(){c.find("input").focus()}),b.type=d.type||"text",b.toggleSwitchType=b.toggleSwitchType||"primary",b.onLabel=b.onLabel||"Yes",b.offLabel=b.offLabel||"No"}}}a.$inject=["$timeout"],angular.module("sds-angular-controls").directive("formTextToggle",a)}(),function(){"use strict";function a(a){return{restrict:"E",replace:!0,require:"^form-field",scope:{layoutCss:"@?"},templateUrl:"sds-angular-controls/form-directives/form-time-picker.html",link:function(a,b,c,d){switch(a.container=d.$scope,d.$scope.layout){case"horizontal":a.layoutCss=a.layoutCss||"col-md-6";break;default:a.layoutCss=a.layoutCss||""}a.$watch("container.record[container.field]",function(a){"string"==typeof a&&(d.$scope.record[d.$scope.field]=moment.utc(d.$scope.record[d.$scope.field]).toDate())}),a.$watch("container.isReadonly",function(b){b&&(a.readOnlyModel=moment(a.container.record[a.container.field]).format("h:mm a"))})}}}a.$inject=["$timeout"],angular.module("sds-angular-controls").directive("formTimePicker",a)}(),function(){"use strict";function a(a){return{restrict:"EA",replace:!0,require:"^form-field",scope:{toggleSwitchType:"@?",onLabel:"@?",offLabel:"@?",style:"@?",layoutCss:"@?"},templateUrl:"sds-angular-controls/form-directives/form-toggle.html",link:function(a,b,c,d){switch(a.container=d.$scope,d.$scope.layout){case"horizontal":a.layoutCss=a.layoutCss||"col-md-6";break;default:a.layoutCss=a.layoutCss||""}a.toggleSwitchType=a.toggleSwitchType||"primary",a.onLabel=a.onLabel||"Yes",a.offLabel=a.offLabel||"No"}}}a.$inject=["$filter"],angular.module("sds-angular-controls").directive("formToggle",a)}(),function(){"use strict";function a(){return{restrict:"A",scope:{maskInput:"@"},link:function(a,b){a.maskInput&&$(b).mask(a.maskInput)}}}angular.module("sds-angular-controls").directive("maskInput",a)}(),function(){"use strict";function a(){return function(a){if(!a)return"";var b=a.toString().trim().replace(/^\+/,"");if(b.match(/[^0-9]/))return a;var c,d,e;switch(b.length){case 10:c=1,d=b.slice(0,3),e=b.slice(3);break;case 11:c=b[0],d=b.slice(1,4),e=b.slice(4);break;case 12:c=b.slice(0,3),d=b.slice(3,5),e=b.slice(5);break;default:return a}return 1===c&&(c=""),e=e.slice(0,3)+"-"+e.slice(3),(c+" ("+d+") "+e).trim()}}angular.module("sds-angular-controls").filter("phoneNumber",a)}(),function(){angular.module("selectize-ng",[]).directive("selectize",function(){"use strict";return{restrict:"A",require:"ngModel",scope:{selectize:"&",options:"&",defaults:"&",selecteditems:"="},link:function(a,b,c,d){function e(b){if(m){if(c.selecteditems){var e=[],g=f(b);angular.forEach(g,function(a){e.push(p.options[a])}),a.$apply(function(){a.selecteditems=e})}}else a.$parent.$apply(function(){d.$setViewValue(b),p.$control.toggleClass("ng-valid",d.$valid),p.$control.toggleClass("ng-invalid",d.$invalid),p.$control.toggleClass("ng-dirty",d.$dirty),p.$control.toggleClass("ng-pristine",d.$pristine)}),"single"===o.mode&&p.blur()}function f(a){return angular.isArray(a)?a:a?String(a).split(o.delimiter):[]}function g(a,b){for(var c=0;c<a.length;c++)if(a[c]==b)return c;return-1}function h(a,b){return-1!==g(a,b)}function i(a,b){a.map(function(a){h(b,a)||h(q,a)||q.push(a)})}function j(a,b){var c,d;for(c=0;c<a.length;c++)d=g(q,a[c][p.settings.valueField]),-1!==d&&(b.push(a[c][p.settings.valueField]),q.splice(d,1))}function k(a,b){a||setTimeout(function(){p.clear()});var c=f(a);m||c===f(p.getValue())||(m=!0,"single"===o.mode&&a?setTimeout(function(){p.setValue(a),m=!1}):"multi"===o.mode&&a?setTimeout(function(){p.setValue(c),m=!1,i(c,f(p.getValue()))}):a||(m=!1),p.$control.toggleClass("ng-valid",d.$valid),p.$control.toggleClass("ng-invalid",d.$invalid),p.$control.toggleClass("ng-dirty",d.$dirty),p.$control.toggleClass("ng-pristine",d.$pristine))}function l(b){if(b){var e;c.defaults&&!n?(m=!1,e=f(a.defaults()),n=!n):c.defaults||(e=f(d.$viewValue)),p.clearOptions(),p.addOption(b),p.refreshOptions(!1),"multi"===o.mode&&b&&e&&j(b,e),k(e)}}var m,n,o,p,q=[];n=!1,o=angular.extend({delimiter:",",persist:!0,mode:"SELECT"===b[0].tagName?"single":"multi"},a.selectize()||{}),p=b.selectize(o)[0].selectize,p.on("change",function(){e(p.getValue())}),a.$parent.$watch(c.ngModel,k),c.options&&a.$parent.$watchCollection(c.options,l),a.$on("$destroy",function(){p.destroy()})}}}),Selectize.define("dropdown_direction",function(a){function b(a){var b=d.settings.dropdownDirection;return"auto"===b&&(b=a.control.below>a.dropdown.height?"down":a.control.above>a.control.below?"up":"down"),b}function c(){var a=d.$control,b=$(window),c=a.outerHeight(!1),e=a.offset().top-b.scrollTop(),f=b.height()-e-c,g=d.$dropdown.outerHeight(!1);return{control:{height:c,above:e,below:f},dropdown:{height:g}}}var d=this;this.positionDropdown=function(){return function(){var a=this.$control,d=this.$dropdown,e=c(),f=b(e);"up"===f?d.addClass("direction-up").removeClass("direction-down"):d.addClass("direction-down").removeClass("direction-up"),a.attr("data-dropdown-direction",f);var g,h="body"===this.settings.dropdownParent,i=h?a.offset():a.position();switch(f){case"up":i.top-=e.dropdown.height,e.dropdown.height>e.control.above&&(g=e.control.above-15);break;case"down":i.top+=e.control.height,e.dropdown.height>e.control.below&&(g=e.control.below-15)}g&&this.$dropdown_content.css({"max-height":g}),this.$dropdown.css({width:a.outerWidth(),top:i.top,left:i.left})}}()})}(),angular.module("sds-angular-controls").run(["$templateCache",function(a){"use strict";a.put("sds-angular-controls/form-directives/form-autocomplete.html",'<div class="{{::container.layout === \'horizontal\' ? layoutCss : \'\' }}"> <select ng-if="!container.isReadonly && !reload" ng-readonly="container.isReadonly" ng-required="container.isRequired" name="{{::container.field}}" selectize="options" options="innerItems" class="{{::container.layout !== \'horizontal\' ? layoutCss : \'\'}}" ng-model="container.record[container.field]"></select> <!-- optionValue as optionLabel for arrayItem in array --> <input ng-if="container.isReadonly" style="{{::style}}" readonly type="text" class="form-control {{::container.layout !== \'horizontal\' ? layoutCss : \'\'}}" ng-model="readOnlyModel"> </div>'),a.put("sds-angular-controls/form-directives/form-currency-input.html",'<div class="{{::container.layout === \'horizontal\' ? layoutCss : \'\' }}"> <input class="form-control inputField {{::container.layout !== \'horizontal\' ? layoutCss : \'\'}}" ng-model="container.record[container.field]" type="text" name="{{::container.field}}" ng-required="container.isRequired" ng-disabled="container.isReadonly" step="any" style="{{::style}}" currency-mask> <div ng-if="::(rightLabel && rightLabel.length > 0)" class="rightLabel">{{::rightLabel}}</div> </div>'),a.put("sds-angular-controls/form-directives/form-date-picker.html",'<div class="{{::container.layout === \'horizontal\' ? layoutCss : \'\' }}"> <span class="input-group {{::container.layout !== \'horizontal\' ? layoutCss : \'\'}}" ng-if="!container.isReadonly"> <input type="text" style="{{::style}}" class="form-control datepicker" placeholder="{{placeholder || container.label}}" ng-model="container.record[container.field]" ng-model-options="modelOptions || {}" ng-required="::container.isRequired" min-date="min" max-date="max" datepicker-popup="{{::dateFormat}}" is-open="calendar.opened"> <span class="input-group-btn"> <button type="button" class="btn btn-default" ng-click="open($event)"><i class="glyphicon glyphicon-calendar"></i></button> </span> </span> <input ng-if="container.isReadonly" style="{{::style}}" readonly type="text" class="form-control {{::container.layout !== \'horizontal\' ? layoutCss : \'\'}}" ng-model="readOnlyModel"> </div>'),a.put("sds-angular-controls/form-directives/form-date-time-picker.html",'<div class="{{::container.layout === \'horizontal\' ? layoutCss : \'\' }} datepicker timepicker"> <span class="input-group {{::container.layout !== \'horizontal\' ? layoutCss : \'\'}}" ng-if="!container.isReadonly"> <input type="text" style="{{::style}}" class="form-control datepicker" placeholder="{{placeholder || container.label}}" ng-model="container.record[container.field]" ng-required="::container.isRequired" ng-model-options="modelOptions || {}" min-date="min" max-date="max" datepicker-popup="{{::dateFormat}}" is-open="calendar.opened"> <span class="input-group-btn"> <button type="button" class="btn btn-default" ng-click="open($event)"><i class="glyphicon glyphicon-calendar"></i></button> </span> </span> <timepicker ng-if="!container.isReadonly" ng-model="container.record[container.field]" ng-required="::container.isRequired" ng-if="!container.isReadonly" minute-step="1"></timepicker> <input ng-if="container.isReadonly" style="{{::style}}" readonly type="text" class="form-control {{::container.layout !== \'horizontal\' ? layoutCss : \'\'}}" ng-model="readOnlyModel"> </div>'),a.put("sds-angular-controls/form-directives/form-field-validation.html",'<div ng-if="!hideValidationMessage" class="has-error" ng-show="showError(this[field])" ng-messages="this[field].$error"> <span class="control-label" ng-message="required"> {{ validationFieldName }} is required. </span> <span class="control-label" ng-message="text"> {{ validationFieldName }} should be text. </span> <span class="control-label" ng-message="integer"> {{ validationFieldName }} should be an integer. </span> <span class="control-label" ng-message="email"> {{ validationFieldName }} should be an email address. </span> <span class="control-label" ng-message="date"> {{ validationFieldName}} should be a date. </span> <span class="control-label" ng-message="datetime"> {{ validationFieldName }} should be a datetime. </span> <span class="control-label" ng-message="time"> {{ validationFieldName }} should be a time. </span> <span class="control-label" ng-message="month"> {{ validationFieldName }} should be a month. </span> <span class="control-label" ng-message="week"> {{ validationFieldName }} should be a week. </span> <span class="control-label" ng-message="url"> {{ validationFieldName }} should be an url. </span> <span class="control-label" ng-message="zip"> {{ validationFieldName }} should be a valid zipcode. </span> <span class="control-label" ng-message="number">{{ validationFieldName }} must be a number</span> <span class="control-label" ng-message="tel">{{ validationFieldName }} must be a phone number</span> <span class="control-label" ng-message="color">{{ validationFieldName }} must be a color</span> <span class="control-label" ng-message="min"> {{ validationFieldName }} must be at least {{min}}. </span> <span class="control-label" ng-message="max"> {{ validationFieldName }} must not exceed {{max}} </span> <span class="control-label" ng-repeat="(k, v) in types" ng-message="{{k}}"> {{ validationFieldName }}{{v[1]}}</span> </div>'),a.put("sds-angular-controls/form-directives/form-field.html",'<div> <div ng-if="layout === \'stacked\'" class="row"> <div class="form-group clearfix" ng-form="{{field}}" ng-class="{ \'has-error\': showError({{field}}) }"> <div class="{{::layoutCss}}"> <label ng-if="showLabel" class="control-label {{labelCss}}"> {{ label }} <span ng-if="isRequired && !isReadonly">*</span></label> <ng-transclude></ng-transclude> <div ng-if="showDefault"><form-input></form-input></div> <!-- validation --> <div class="pull-left" ng-include="\'sds-angular-controls/form-directives/form-field-validation.html\'"></div> </div> </div> </div> <div ng-if="layout === \'horizontal\'" class="row inline-control"> <div class="form-group clearfix" ng-form="{{field}}" ng-class="{ \'has-error\': showError({{field}}) }"> <label ng-if="showLabel" class="control-label {{labelCss}}"> {{ label }} <span ng-if="isRequired && !isReadonly">*</span></label> <ng-transclude></ng-transclude> <div ng-if="showDefault"><form-input></form-input></div> <!-- validation --> <div ng-if="!hideValidationMessage" ng-show="showError({{field}})" class="popover validation right alert-danger" style="display:inline-block; top:auto; left:auto; margin-top:-4px; min-width:240px"> <div class="arrow" style="top: 20px"></div> <div class="popover-content" ng-include="\'sds-angular-controls/form-directives/form-field-validation.html\'"> </div> </div> </div> </div> <div ng-if="layout !== \'stacked\' && layout !== \'horizontal\'" ng-form="{{field}}" ng-class="{ \'has-error\': showError({{field}}) }" class="grid-control {{::layoutCss}}"> <ng-transclude></ng-transclude> <div ng-if="showDefault"><form-input></form-input></div> </div> <div ng-if="log"> form-input value: {{record[field]}}<br> {{isRequired}} </div> </div>'),a.put("sds-angular-controls/form-directives/form-input.html",'<div class="{{::container.layout === \'horizontal\' ? layoutCss : \'\' }}"> <input class="form-control inputField {{::container.layout !== \'horizontal\' ? layoutCss : \'\'}}" ng-model="container.record[container.field]" name="{{::container.field}}" type="{{::type}}" ng-if="type !== \'number\'" ng-required="container.isRequired" ng-disabled="container.isReadonly" placeholder="{{container.isReadonly ? &quot;&quot; : placeholder || container.label}}" style="{{::style}}" mask-input="{{mask}}" maxlength="{{maxlength || \'\'}}" minlength="{{minlength || -1}}"> <input class="form-control inputField {{::container.layout !== \'horizontal\' ? layoutCss : \'\'}}" ng-model="container.record[container.field]" name="{{::container.field}}" type="number" ng-if="type === \'number\'" ng-required="container.isRequired" ng-disabled="container.isReadonly" placeholder="{{container.isReadonly ? &quot;&quot; : placeholder || container.label}}" min="{{::min}}" max="{{::max}}" step="{{::step}}" style="{{::style}}" mask-input="{{mask}}"> <div ng-if="::(rightLabel && rightLabel.length > 0)" class="rightLabel">{{::rightLabel}}</div> </div>'),a.put("sds-angular-controls/form-directives/form-multi-select.html",'<div class="{{::container.layout === \'horizontal\' ? layoutCss : \'\' }}"> <input ng-if="!container.isReadonly" ng-readonly="container.isReadonly" ng-required="container.isRequired" name="{{::container.field}}" selectize="options" options="items" class="{{::container.layout !== \'horizontal\' ? layoutCss : \'\'}}" ng-model="container.record[container.field]"> <!-- optionValue as optionLabel for arrayItem in array --> <input ng-if="container.isReadonly" style="{{::style}}" readonly type="text" class="form-control {{::container.layout !== \'horizontal\' ? layoutCss : \'\'}}" ng-model="readOnlyModel"> </div>'),a.put("sds-angular-controls/form-directives/form-select.html",'<div class="{{::container.layout === \'horizontal\' ? layoutCss : \'\' }}"> <select ng-if="!container.isReadonly" class="form-control {{::container.layout !== \'horizontal\' ? layoutCss : \'\'}}" name="{{::container.field}}" ng-model="container.record[container.field]" ng-options="convertType(key) as innerItems[key] for key in orderHash(innerItems)" ng-required="container.isRequired"></select> <!-- optionValue as optionLabel for arrayItem in array --> <input ng-if="container.isReadonly" style="{{::style}}" readonly type="text" class="form-control {{::container.layout !== \'horizontal\' ? layoutCss : \'\'}}" ng-model="readOnlyModel"> </div>'),a.put("sds-angular-controls/form-directives/form-text-area.html",'<div class="{{::container.layout === \'horizontal\' ? layoutCss : \'\' }}"> <textarea class="form-control inputField {{::container.layout !== \'horizontal\' ? layoutCss : \'\'}}" ng-model="container.record[container.field]" name="{{::container.field}}" ng-required="container.isRequired" ng-disabled="container.isReadonly" maxlength="{{maxlength || \'\'}}" minlength="{{minlength || -1}}" style="{{::style}}"></textarea> </div>'),a.put("sds-angular-controls/form-directives/form-text-toggle.html",'<div class="{{::container.layout === \'horizontal\' ? layoutCss : \'\' }} text-toggle"> <input type="text" ng-disabled="container.isReadonly" type="{{::type}}" class="form-control {{::container.layout !== \'horizontal\' ? layoutCss : \'\'}}" ng-required="container.isRequired" ng-model="container.record[container.field]"> <!-- bug in toggle where setting any disabled makes it disabled - so needing an if here --> <toggle-switch ng-if="container.isReadonly" is-disabled="true" class="{{::toggleSwitchType}}" ng-model="container.record[toggleField]" on-label="{{::onLabel}}" off-label="{{::offLabel}}"> </toggle-switch> <toggle-switch ng-if="!container.isReadonly" class="{{::toggleSwitchType}}" ng-model="container.record[toggleField]" on-label="{{::onLabel}}" off-label="{{::offLabel}}"> </toggle-switch> </div>'),a.put("sds-angular-controls/form-directives/form-time-picker.html",'<div class="{{::container.layout === \'horizontal\' ? layoutCss : \'\' }} timepicker"> <timepicker ng-model="container.record[container.field]" ng-required="::container.isRequired" ng-if="!container.isReadonly" minute-step="1"></timepicker> <input ng-if="container.isReadonly" style="{{::style}}" readonly type="text" class="form-control {{::container.layout !== \'horizontal\' ? layoutCss : \'\'}}" ng-model="readOnlyModel"> </div>'),a.put("sds-angular-controls/form-directives/form-toggle.html",'<div class="{{::container.layout === \'horizontal\' ? layoutCss : \'\' }}"> <!-- bug in toggle where setting any disabled makes it disabled - so needing an if here --> <toggle-switch ng-if="container.isReadonly" style="{{::style}}" is-disabled="true" class="{{::toggleSwitchType}}" ng-model="container.record[container.field]" on-label="{{::onLabel}}" off-label="{{::offLabel}}"> </toggle-switch> <toggle-switch ng-if="!container.isReadonly" style="{{::style}}" class="{{::toggleSwitchType}}" ng-model="container.record[container.field]" on-label="{{::onLabel}}" off-label="{{::offLabel}}"> </toggle-switch> </div>')}]);
//# sourceMappingURL=sds-angular-controls.min.js.map